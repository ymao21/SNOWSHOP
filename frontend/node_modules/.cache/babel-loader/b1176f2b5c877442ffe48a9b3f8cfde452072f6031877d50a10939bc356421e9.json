{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\nconst LOAD_CART = '/cart/LOAD_CART';\nconst ADD_CART = '/cart/ADD_CART';\nconst REMOVE_CART = '/cart/REMOVE_CART';\nconst EDIT_QUANTITY = '/cart/EDIT_QUANTITY';\nconst CLEAR_CART = '/cart/CLEAR_CART';\n\n// Action creators\nexport const loadToCart = products => {\n  return {\n    type: LOAD_CART,\n    products\n  };\n};\nexport const addToCart = product => {\n  return {\n    type: ADD_CART,\n    product\n  };\n};\nexport const editQuantity = (cartItemId, newQuantity) => {\n  return {\n    type: EDIT_QUANTITY,\n    cartItemId,\n    newQuantity\n  };\n};\nexport const deleteFromCart = (cartId, productId) => {\n  return {\n    type: REMOVE_CART,\n    productId,\n    cartId\n  };\n};\nexport const clearCart = cartId => {\n  return {\n    type: CLEAR_CART,\n    cartId\n  };\n};\nexport const loadAllCartThunk = _ref => {\n  let {\n    cartId\n  } = _ref;\n  return async dispatch => {\n    const response = await csrfFetch(`/api/cart/${cartId}`);\n    if (response.ok) {\n      const cartItems = await response.json();\n      dispatch(loadToCart(cartItems));\n      return cartItems;\n    }\n    return response;\n  };\n};\nexport const addToCartThunk = _ref2 => {\n  let {\n    cartId,\n    productId\n  } = _ref2;\n  return async dispatch => {\n    const response = await csrfFetch(`/api/cart/${cartId}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        productId,\n        cartId\n      })\n    });\n    if (response.ok) {\n      const product = await response.json();\n      dispatch(addToCart(product));\n      return product;\n    }\n    return response;\n  };\n};\nexport const editQuantityThunk = (cartItemId, newQuantity, productId, cartId) => async dispatch => {\n  const response = await csrfFetch(`/api/cart/${cartId}`, {\n    method: 'PUT',\n    body: JSON.stringify({\n      cartItemId,\n      newQuantity,\n      productId,\n      cartId\n    })\n  });\n  if (response.ok) {\n    const product = await response.json();\n    dispatch(editQuantity(cartItemId, newQuantity));\n    return product;\n  }\n};\nexport const deleteCartThunk = (cartId, productId) => async dispatch => {\n  const response = await csrfFetch(`/api/cart/${cartId}/${productId}`, {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    const removeFromCart = await response.json();\n    dispatch(deleteFromCart(cartId, productId));\n    return removeFromCart;\n  }\n};\nexport const clearCartThunk = cartId => async dispatch => {\n  const response = await csrfFetch(`/api/cart/${cartId}`, {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    const clearCart = await response.json();\n    dispatch(clearCart(cartId));\n    return clearCart;\n  }\n};\nconst initialState = {\n  cartItems: {}\n};\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOAD_CART:\n      const normalizedCartItems = action.products.CartProducts.reduce((acc, item) => {\n        acc[item.productId] = item;\n        return acc;\n      }, {});\n      return {\n        ...state,\n        cartItems: normalizedCartItems\n      };\n    case ADD_CART:\n      return {\n        ...state,\n        cartItems: {\n          ...state.cartItems,\n          [action.product.productId]: action.product\n        }\n      };\n    case EDIT_QUANTITY:\n      return {\n        ...state,\n        cartItems: {\n          ...state.cartItems,\n          [action.cartItemId]: {\n            ...state.cartItems[action.cartItemId],\n            quantity: action.newQuantity\n          }\n        }\n      };\n    case REMOVE_CART:\n      const {\n        [action.productId]: _,\n        ...updatedCartItems\n      } = state.cartItems;\n      return {\n        ...state,\n        cartItems: updatedCartItems\n      };\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartItems: {}\n      };\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["csrfFetch","LOAD_CART","ADD_CART","REMOVE_CART","EDIT_QUANTITY","CLEAR_CART","loadToCart","products","type","addToCart","product","editQuantity","cartItemId","newQuantity","deleteFromCart","cartId","productId","clearCart","loadAllCartThunk","_ref","dispatch","response","ok","cartItems","json","addToCartThunk","_ref2","method","body","JSON","stringify","editQuantityThunk","deleteCartThunk","removeFromCart","clearCartThunk","initialState","cartReducer","state","arguments","length","undefined","action","normalizedCartItems","CartProducts","reduce","acc","item","quantity","_","updatedCartItems"],"sources":["/Users/yiningmao/Desktop/SNOWSHOP Project/SNOWSHOP/frontend/src/store/cart.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\";\n\nconst LOAD_CART = '/cart/LOAD_CART';\nconst ADD_CART = '/cart/ADD_CART';\nconst REMOVE_CART = '/cart/REMOVE_CART';\nconst EDIT_QUANTITY = '/cart/EDIT_QUANTITY';\nconst CLEAR_CART = '/cart/CLEAR_CART'\n\n// Action creators\nexport const loadToCart = (products) => {\n  return {\n    type: LOAD_CART,\n    products,\n  };\n};\n\nexport const addToCart = (product) => {\n  return {\n    type: ADD_CART,\n    product,\n  };\n};\n\nexport const editQuantity = (cartItemId, newQuantity) => {\n  return {\n    type: EDIT_QUANTITY,\n    cartItemId,\n    newQuantity,\n  };\n};\n\nexport const deleteFromCart = (cartId, productId) => {\n  return {\n    type: REMOVE_CART,\n    productId,\n    cartId\n  };\n};\n\nexport const clearCart = (cartId) => {\n  return {\n    type: CLEAR_CART,\n    cartId\n  }\n}\n\nexport const loadAllCartThunk = ({cartId}) => async (dispatch) => {\n  const response = await csrfFetch(`/api/cart/${cartId}`);\n\n  if (response.ok) {\n    const cartItems = await response.json();\n    dispatch(loadToCart(cartItems));\n    return cartItems;\n  }\n  return response;\n};\n\nexport const addToCartThunk = ({cartId, productId}) => async (dispatch) => {\n\n const response = await csrfFetch(`/api/cart/${cartId}`, {\n  method: 'POST',\n  body: JSON.stringify({productId, cartId})\n });\n\n  if (response.ok) {\n    const product = await response.json();\n    dispatch(addToCart(product));\n    return product;\n  }\n\n  return response;\n};\n\nexport const editQuantityThunk = (cartItemId, newQuantity, productId, cartId) => async (dispatch) => {\n\n  const response = await csrfFetch(`/api/cart/${cartId}`, {\n    method: 'PUT',\n    body: JSON.stringify({cartItemId, newQuantity, productId, cartId})\n   });\n\nif (response.ok) {\n\n  const product = await response.json()\n  dispatch(editQuantity(cartItemId, newQuantity ))\n  return product\n\n}\n}\n\nexport const deleteCartThunk = (cartId, productId) => async (dispatch) => {\n  const response = await csrfFetch(`/api/cart/${cartId}/${productId}`, {\n      method: 'DELETE'\n  })\n\n  if(response.ok) {\n    const removeFromCart = await response.json()\n    dispatch(deleteFromCart(cartId, productId))\n    return removeFromCart\n  }\n}\n\nexport const clearCartThunk = (cartId) => async (dispatch) => {\n  const response = await csrfFetch(`/api/cart/${cartId}`, {\n    method: 'DELETE'\n})\n\n\n\nif(response.ok) {\n  const clearCart = await response.json()\n  dispatch(clearCart(cartId))\n  return clearCart\n}\n}\n\nconst initialState = {\n  cartItems: {},\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CART:\n      const normalizedCartItems = action.products.CartProducts.reduce(\n        (acc, item) => {\n          acc[item.productId] = item;\n          return acc;\n        },\n        {}\n      );\n      return {\n        ...state,\n        cartItems: normalizedCartItems,\n      };\n    case ADD_CART:\n      return {\n        ...state,\n        cartItems: {\n          ...state.cartItems,\n          [action.product.productId]: action.product,\n        },\n      };\n    case EDIT_QUANTITY:\n      return {\n        ...state,\n        cartItems: {\n          ...state.cartItems,\n          [action.cartItemId]: {\n            ...state.cartItems[action.cartItemId],\n            quantity: action.newQuantity,\n          },\n        },\n      };\n    case REMOVE_CART:\n      const { [action.productId]: _, ...updatedCartItems } = state.cartItems;\n      return {\n        ...state,\n        cartItems: updatedCartItems,\n      };\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartItems: {},\n      };\n    default:\n      return state;\n  }\n};\n\n\nexport default cartReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}