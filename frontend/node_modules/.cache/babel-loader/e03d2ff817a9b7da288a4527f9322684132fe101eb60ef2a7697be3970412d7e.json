{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport sessionReducer from \"./session\";\nimport productsReducer from \"./products\";\nimport reviewsReducer from \"./reviews\";\nimport cartReducer from \"./cart\";\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n  productState: productsReducer,\n  reviewState: reviewsReducer,\n  cartState: cartReducer,\n  searchState: searchReducer\n});\nlet enhancer;\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","thunk","sessionReducer","productsReducer","reviewsReducer","cartReducer","rootReducer","session","productState","reviewState","cartState","searchState","searchReducer","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"sources":["/Users/yiningmao/Desktop/SNOWSHOP Project/SNOWSHOP/frontend/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport sessionReducer from \"./session\";\nimport productsReducer from \"./products\";\nimport reviewsReducer from \"./reviews\";\nimport cartReducer from \"./cart\";\n\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n  productState: productsReducer,\n  reviewState: reviewsReducer,\n  cartState: cartReducer,\n  searchState: searchReducer\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC9E,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,cAAc,MAAM,WAAW;AACtC,OAAOC,eAAe,MAAM,YAAY;AACxC,OAAOC,cAAc,MAAM,WAAW;AACtC,OAAOC,WAAW,MAAM,QAAQ;AAEhC,MAAMC,WAAW,GAAGR,eAAe,CAAC;EAClCS,OAAO,EAAEL,cAAc;EACvBM,YAAY,EAAEL,eAAe;EAC7BM,WAAW,EAAEL,cAAc;EAC3BM,SAAS,EAAEL,WAAW;EACtBM,WAAW,EAAEC;AACf,CAAC,CAAC;AAEF,IAAIC,QAAQ;AAEZ,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCH,QAAQ,GAAGd,eAAe,CAACE,KAAK,CAAC;AACnC,CAAC,MAAM;EACL,MAAMgB,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC,CAACC,OAAO;EAC9C,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAoC,IAAItB,OAAO;EACxDa,QAAQ,GAAGO,gBAAgB,CAACrB,eAAe,CAACE,KAAK,EAAEgB,MAAM,CAAC,CAAC;AAC7D;AAEA,MAAMM,cAAc,GAAIC,cAAc,IAAK;EACzC,OAAO3B,WAAW,CAACS,WAAW,EAAEkB,cAAc,EAAEX,QAAQ,CAAC;AAC3D,CAAC;AAED,eAAeU,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}