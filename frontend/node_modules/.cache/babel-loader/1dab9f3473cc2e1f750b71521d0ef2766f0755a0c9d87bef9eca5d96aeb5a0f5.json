{"ast":null,"code":"const LOAD_SEARCH = 'search/LOAD_SEARCH';\nexport const loadSearch = search => ({\n  type: LOAD_SEARCH,\n  search\n});\nexport const loadSearchThunk = q => async dispatch => {\n  if (typeof q !== 'string') {\n    throw new Error('Search term must be a string');\n  }\n  try {\n    const response = await fetch(`/api/search/${q}`);\n    if (response.ok) {\n      const result = await response.json();\n      dispatch(loadSearch(result));\n      return result;\n    }\n    throw new Error('Failed to load search results');\n  } catch (error) {\n    console.error('Error loading search results:', error);\n    throw error;\n  }\n};\nconst initialState = {};\nconst searchReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {\n    ...state\n  };\n  switch (action.type) {\n    case LOAD_SEARCH:\n      action.search.forEach(product => {\n        console.log(\"action.search\", product);\n        newState[product.id] = product;\n      });\n      console.log(\".search\", product);\n      return newState;\n    default:\n      return state;\n  }\n};\nexport default searchReducer;","map":{"version":3,"names":["LOAD_SEARCH","loadSearch","search","type","loadSearchThunk","q","dispatch","Error","response","fetch","ok","result","json","error","console","initialState","searchReducer","state","arguments","length","undefined","action","newState","forEach","product","log","id"],"sources":["/Users/yiningmao/Desktop/SNOWSHOP Project/SNOWSHOP/frontend/src/store/search.js"],"sourcesContent":["const LOAD_SEARCH = 'search/LOAD_SEARCH';\n\nexport const loadSearch = (search) => ({\n  type: LOAD_SEARCH,\n  search\n});\n\nexport const loadSearchThunk = (q) => async (dispatch) => {\n\n\n\n  if (typeof q !== 'string') {\n    throw new Error('Search term must be a string');\n  }\n\n  try {\n    const response = await fetch(`/api/search/${q}`);\n\n    if (response.ok) {\n      const result = await response.json();\n      dispatch(loadSearch(result));\n      return result;\n    }\n\n    throw new Error('Failed to load search results');\n  } catch (error) {\n    console.error('Error loading search results:', error);\n    throw error;\n  }\n\n};\n\nconst initialState = {};\nconst searchReducer = (state = initialState, action) => {\n  let newState = { ...state };\n\n  switch (action.type) {\n    case LOAD_SEARCH:\n      action.search.forEach((product) => {\n      console.log(\"action.search\", product)\n        newState[product.id] = product;\n      });\n      console.log(\".search\", product)\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,oBAAoB;AAExC,OAAO,MAAMC,UAAU,GAAIC,MAAM,KAAM;EACrCC,IAAI,EAAEH,WAAW;EACjBE;AACF,CAAC,CAAC;AAEF,OAAO,MAAME,eAAe,GAAIC,CAAC,IAAK,MAAOC,QAAQ,IAAK;EAIxD,IAAI,OAAOD,CAAC,KAAK,QAAQ,EAAE;IACzB,MAAM,IAAIE,KAAK,CAAC,8BAA8B,CAAC;EACjD;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcJ,CAAE,EAAC,CAAC;IAEhD,IAAIG,QAAQ,CAACE,EAAE,EAAE;MACf,MAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACpCN,QAAQ,CAACL,UAAU,CAACU,MAAM,CAAC,CAAC;MAC5B,OAAOA,MAAM;IACf;IAEA,MAAM,IAAIJ,KAAK,CAAC,+BAA+B,CAAC;EAClD,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AAEF,CAAC;AAED,MAAME,YAAY,GAAG,CAAC,CAAC;AACvB,MAAMC,aAAa,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGH,YAAY;EAAA,IAAEM,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACjD,IAAIE,QAAQ,GAAG;IAAE,GAAGL;EAAM,CAAC;EAE3B,QAAQI,MAAM,CAAClB,IAAI;IACjB,KAAKH,WAAW;MACdqB,MAAM,CAACnB,MAAM,CAACqB,OAAO,CAAEC,OAAO,IAAK;QACnCV,OAAO,CAACW,GAAG,CAAC,eAAe,EAAED,OAAO,CAAC;QACnCF,QAAQ,CAACE,OAAO,CAACE,EAAE,CAAC,GAAGF,OAAO;MAChC,CAAC,CAAC;MACFV,OAAO,CAACW,GAAG,CAAC,SAAS,EAAED,OAAO,CAAC;MAC/B,OAAOF,QAAQ;IAEjB;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}