{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\nconst LOAD_CART = '/cart/LOAD_CART';\nconst ADD_CART = '/cart/ADD_CART';\nconst REMOVE_CART = '/cart/REMOVE_CART';\nconst EDIT_QUANTITY = '/cart/EDIT_QUANTITY';\nconst CLEAR_CART = '/cart/CLEAR_CART';\n\n// Action creators\nexport const loadToCart = products => {\n  return {\n    type: LOAD_CART,\n    products\n  };\n};\nexport const addToCart = product => {\n  return {\n    type: ADD_CART,\n    product\n  };\n};\n\n// export const editQuantity = (cartItemId, newQuantity) => {\n//   if (newQuantity < 1) return deleteFromCart(cartItemId)\n//   return {\n//     type: EDIT_QUANTITY,\n//     cartItemId,\n//     newQuantity,\n//   };\n// };\n\n// export const deleteFromCart = (productId) => {\n//   return {\n//     type: REMOVE_CART,\n//     productId,\n//   };\n// };\n\n// export const clearCart = () => {\n//   return {\n//     type: CLEAR_CART,\n//   };\n// };\n\nexport const loadAllCartThunk = _ref => {\n  let {\n    cartId\n  } = _ref;\n  return async dispatch => {\n    const response = await csrfFetch(`/api/cart/${cartId}`);\n    if (response.ok) {\n      const cartItems = await response.json();\n      dispatch(loadToCart(cartItems));\n      return cartItems;\n    }\n    return response;\n  };\n};\nexport const addToCartThunk = _ref2 => {\n  let {\n    cartId,\n    productId\n  } = _ref2;\n  return async dispatch => {\n    const response = await csrfFetch(`/api/cart/${cartId}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        productId,\n        cartId\n      })\n    });\n    if (response.ok) {\n      const product = await response.json();\n      dispatch(addToCart(product));\n      return product;\n    }\n    return response;\n  };\n};\n\n// export const deleteCartThunk = (productId) => async (dispatch) => {\n//   const response = await csrfFetch(`/api/cart/${productId}`, {\n//       method: 'DELETE'\n//   })\n//   if(response.ok) {\n//       const removeFromCart = await response.json()\n//       dispatch(deleteFromCart(removeFromCart))\n//       return removeFromCart\n//   }\n\n//   return response;\n// }\n\nconst initialState = {\n  cartItems: []\n};\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOAD_CART:\n      return {\n        ...state,\n        cartItems: action.products\n      };\n    case ADD_CART:\n      return {\n        ...state,\n        cartItems: [...state.cartItems, action.product]\n      };\n    case EDIT_QUANTITY:\n      return {\n        ...state,\n        cartItems: [...state.cartItems, action.product],\n        cartItems: state.cartItems.map(item => item.id === action.cartItemId ? {\n          ...item,\n          quantity: action.newQuantity\n        } : item)\n      };\n    case EDIT_QUANTITY:\n      if (action.newQuantity < 1) {\n        return {\n          ...state,\n          cartItems: state.cartItems.filter(item => item.id !== action.cartItemId)\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: state.cartItems.map(item => item.id === action.cartItemId ? {\n            ...item,\n            quantity: action.newQuantity\n          } : item)\n        };\n      }\n\n    // case REMOVE_CART:\n    //   return {\n    //     ...state,\n    //     cartItems: state.cartItems.filter((item) => item.id !== action.productId),\n    //   };\n    // case CLEAR_CART:\n    //   return {\n    //     ...state,\n    //     cartItems: [],\n    //   };\n\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["csrfFetch","LOAD_CART","ADD_CART","REMOVE_CART","EDIT_QUANTITY","CLEAR_CART","loadToCart","products","type","addToCart","product","loadAllCartThunk","_ref","cartId","dispatch","response","ok","cartItems","json","addToCartThunk","_ref2","productId","method","body","JSON","stringify","initialState","cartReducer","state","arguments","length","undefined","action","map","item","id","cartItemId","quantity","newQuantity","filter"],"sources":["/Users/yiningmao/Desktop/SNOWSHOP Project/SNOWSHOP/frontend/src/store/cart.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\";\n\nconst LOAD_CART = '/cart/LOAD_CART';\nconst ADD_CART = '/cart/ADD_CART';\nconst REMOVE_CART = '/cart/REMOVE_CART';\nconst EDIT_QUANTITY = '/cart/EDIT_QUANTITY';\nconst CLEAR_CART = '/cart/CLEAR_CART';\n\n// Action creators\nexport const loadToCart = (products) => {\n  return {\n    type: LOAD_CART,\n    products,\n  };\n};\n\nexport const addToCart = (product) => {\n  return {\n    type: ADD_CART,\n    product,\n  };\n};\n\n// export const editQuantity = (cartItemId, newQuantity) => {\n//   if (newQuantity < 1) return deleteFromCart(cartItemId)\n//   return {\n//     type: EDIT_QUANTITY,\n//     cartItemId,\n//     newQuantity,\n//   };\n// };\n\n// export const deleteFromCart = (productId) => {\n//   return {\n//     type: REMOVE_CART,\n//     productId,\n//   };\n// };\n\n// export const clearCart = () => {\n//   return {\n//     type: CLEAR_CART,\n//   };\n// };\n\nexport const loadAllCartThunk = ({cartId}) => async (dispatch) => {\n  const response = await csrfFetch(`/api/cart/${cartId}`);\n\n  if (response.ok) {\n    const cartItems = await response.json();\n    dispatch(loadToCart(cartItems));\n    return cartItems;\n  }\n  return response;\n};\n\nexport const addToCartThunk = ({cartId, productId}) => async (dispatch) => {\n\n const response = await csrfFetch(`/api/cart/${cartId}`, {\n  method: 'POST',\n  body: JSON.stringify({productId, cartId})\n });\n\n  if (response.ok) {\n    const product = await response.json();\n    dispatch(addToCart(product));\n    return product;\n  }\n\n  return response;\n};\n\n\n// export const deleteCartThunk = (productId) => async (dispatch) => {\n//   const response = await csrfFetch(`/api/cart/${productId}`, {\n//       method: 'DELETE'\n//   })\n//   if(response.ok) {\n//       const removeFromCart = await response.json()\n//       dispatch(deleteFromCart(removeFromCart))\n//       return removeFromCart\n//   }\n\n//   return response;\n// }\n\n\nconst initialState = {\n  cartItems: [],\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CART:\n      return {\n        ...state,\n        cartItems: action.products,\n      };\n    case ADD_CART:\n      return {\n        ...state,\n        cartItems: [...state.cartItems, action.product],\n      };\n    case EDIT_QUANTITY:\n      return {\n        ...state,\n       cartItems: [...state.cartItems, action.product],\n        cartItems: state.cartItems.map((item) =>\n          item.id === action.cartItemId ? { ...item, quantity: action.newQuantity } : item\n        ),\n      };\n    case EDIT_QUANTITY:\n\n  if (action.newQuantity < 1) {\n    return {\n      ...state,\n      cartItems: state.cartItems.filter((item) => item.id !== action.cartItemId),\n    };\n  } else {\n    return {\n      ...state,\n      cartItems: state.cartItems.map((item) =>\n        item.id === action.cartItemId ? { ...item, quantity: action.newQuantity } : item\n      ),\n    };\n  }\n\n    // case REMOVE_CART:\n    //   return {\n    //     ...state,\n    //     cartItems: state.cartItems.filter((item) => item.id !== action.productId),\n    //   };\n    // case CLEAR_CART:\n    //   return {\n    //     ...state,\n    //     cartItems: [],\n    //   };\n    \n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}