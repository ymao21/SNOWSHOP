{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\nconst LOAD_CART = '/cart/LOAD_CART';\nconst ADD_CART = '/cart/ADD_CART';\nconst REMOVE_CART = '/cart/REMOVE_CART';\nconst EDIT_QUANTITY = '/cart/EDIT_QUANTITY';\n\n// Action creators\nexport const loadToCart = products => {\n  return {\n    type: LOAD_CART,\n    products\n  };\n};\nexport const addToCart = product => {\n  return {\n    type: ADD_CART,\n    product\n  };\n};\nexport const editQuantity = (cartItemId, newQuantity) => {\n  return {\n    type: EDIT_QUANTITY,\n    cartItemId,\n    newQuantity\n  };\n};\nexport const deleteFromCart = cartId => {\n  return {\n    type: REMOVE_CART,\n    productId\n  };\n};\nexport const loadAllCartThunk = _ref => {\n  let {\n    cartId\n  } = _ref;\n  return async dispatch => {\n    const response = await csrfFetch(`/api/cart/${cartId}`);\n    if (response.ok) {\n      const cartItems = await response.json();\n      dispatch(loadToCart(cartItems));\n      return cartItems;\n    }\n    return response;\n  };\n};\nexport const addToCartThunk = _ref2 => {\n  let {\n    cartId,\n    productId\n  } = _ref2;\n  return async dispatch => {\n    const response = await csrfFetch(`/api/cart/${cartId}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        productId,\n        cartId\n      })\n    });\n    if (response.ok) {\n      const product = await response.json();\n      dispatch(addToCart(product));\n      return product;\n    }\n    return response;\n  };\n};\nexport const editQuantityThunk = (cartItemId, newQuantity, productId, cartId) => async dispatch => {\n  const response = await csrfFetch(`/api/cart/${cartId}`, {\n    method: 'PUT',\n    body: JSON.stringify({\n      cartItemId,\n      newQuantity,\n      productId,\n      cartId\n    })\n  });\n  if (response.ok) {\n    const product = await response.json();\n    dispatch(editQuantity(cartItemId, newQuantity));\n    return product;\n  }\n};\nexport const deleteCartThunk = cartId => async dispatch => {\n  const response = await csrfFetch(`/api/cart/${cartId}`, {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    const removeFromCart = await response.json();\n    dispatch(deleteFromCart(cartId));\n    return removeFromCart;\n  }\n  return response;\n};\nconst initialState = {\n  cartItems: []\n};\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOAD_CART:\n      return {\n        ...state,\n        cartItems: action.products.CartProducts\n      };\n    case ADD_CART:\n      return {\n        ...state,\n        cartItems: [...state.cartItems, action.product]\n      };\n    case EDIT_QUANTITY:\n      return {\n        ...state,\n        cartItems: state.cartItems.map(item => {\n          if (item.id === action.cartItemId) {\n            return {\n              ...item,\n              quantity: action.newQuantity\n            };\n          }\n          return item;\n        })\n      };\n    case REMOVE_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(item => item.productId !== action.productId)\n      };\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["csrfFetch","LOAD_CART","ADD_CART","REMOVE_CART","EDIT_QUANTITY","loadToCart","products","type","addToCart","product","editQuantity","cartItemId","newQuantity","deleteFromCart","cartId","productId","loadAllCartThunk","_ref","dispatch","response","ok","cartItems","json","addToCartThunk","_ref2","method","body","JSON","stringify","editQuantityThunk","deleteCartThunk","removeFromCart","initialState","cartReducer","state","arguments","length","undefined","action","CartProducts","map","item","id","quantity","filter"],"sources":["/Users/yiningmao/Desktop/SNOWSHOP Project/SNOWSHOP/frontend/src/store/cart.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\";\n\nconst LOAD_CART = '/cart/LOAD_CART';\nconst ADD_CART = '/cart/ADD_CART';\nconst REMOVE_CART = '/cart/REMOVE_CART';\nconst EDIT_QUANTITY = '/cart/EDIT_QUANTITY';\n\n// Action creators\nexport const loadToCart = (products) => {\n  return {\n    type: LOAD_CART,\n    products,\n  };\n};\n\nexport const addToCart = (product) => {\n  return {\n    type: ADD_CART,\n    product,\n  };\n};\n\nexport const editQuantity = (cartItemId, newQuantity) => {\n  return {\n    type: EDIT_QUANTITY,\n    cartItemId,\n    newQuantity,\n  };\n};\n\nexport const deleteFromCart = (cartId) => {\n  return {\n    type: REMOVE_CART,\n    productId,\n  };\n};\n\n\n\nexport const loadAllCartThunk = ({cartId}) => async (dispatch) => {\n  const response = await csrfFetch(`/api/cart/${cartId}`);\n\n  if (response.ok) {\n    const cartItems = await response.json();\n    dispatch(loadToCart(cartItems));\n    return cartItems;\n  }\n  return response;\n};\n\nexport const addToCartThunk = ({cartId, productId}) => async (dispatch) => {\n\n const response = await csrfFetch(`/api/cart/${cartId}`, {\n  method: 'POST',\n  body: JSON.stringify({productId, cartId})\n });\n\n  if (response.ok) {\n    const product = await response.json();\n    dispatch(addToCart(product));\n    return product;\n  }\n\n  return response;\n};\n\nexport const editQuantityThunk = (cartItemId, newQuantity, productId, cartId) => async (dispatch) => {\n\n  const response = await csrfFetch(`/api/cart/${cartId}`, {\n    method: 'PUT',\n    body: JSON.stringify({cartItemId, newQuantity, productId, cartId})\n   });\n\nif (response.ok) {\n\n  const product = await response.json()\n  dispatch(editQuantity(cartItemId, newQuantity ))\n  return product\n\n}\n}\n\nexport const deleteCartThunk = (cartId) => async (dispatch) => {\n  const response = await csrfFetch(`/api/cart/${cartId}`, {\n      method: 'DELETE'\n  })\n  if(response.ok) {\n      const removeFromCart = await response.json()\n      dispatch(deleteFromCart(cartId))\n      return removeFromCart\n  }\n\n  return response;\n}\n\n\nconst initialState = {\n  cartItems: [],\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CART:\n      return {\n        ...state,\n        cartItems: action.products.CartProducts,\n      };\n    case ADD_CART:\n      return {\n        ...state,\n        cartItems: [...state.cartItems, action.product],\n      };\n     case EDIT_QUANTITY:\n        return {\n          ...state,\n          cartItems: state.cartItems.map((item) => {\n            if (item.id === action.cartItemId) {\n              return {\n                ...item,\n                quantity: action.newQuantity,\n              };\n            }\n            return item;\n          }),\n        };\n\n        case REMOVE_CART:\n          return {\n            ...state,\n            cartItems: state.cartItems.filter(\n              (item) => item.productId !== action.productId\n            ),\n          };\n\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}