{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\nconst LOAD_CART = '/cart/LOAD_CART';\nconst ADD_CART = '/cart/ADD_CART';\nconst REMOVE_CART = '/cart/REMOVE_CART';\nconst EDIT_QUANTITY = '/cart/EDIT_QUANTITY';\n\n// Action creators\nexport const loadToCart = products => {\n  return {\n    type: LOAD_CART,\n    products\n  };\n};\nexport const addToCart = product => {\n  return {\n    type: ADD_CART,\n    product\n  };\n};\nexport const editQuantity = (cartItemId, newQuantity) => {\n  return {\n    type: EDIT_QUANTITY,\n    cartItemId,\n    newQuantity\n  };\n};\nexport const deleteFromCart = (cartId, productId) => {\n  return {\n    type: REMOVE_CART,\n    productId,\n    cartId\n  };\n};\nexport const loadAllCartThunk = _ref => {\n  let {\n    cartId\n  } = _ref;\n  return async dispatch => {\n    const response = await csrfFetch(`/api/cart/${cartId}`);\n    if (response.ok) {\n      const cartItems = await response.json();\n      dispatch(loadToCart(cartItems));\n      return cartItems;\n    }\n    return response;\n  };\n};\nexport const addToCartThunk = _ref2 => {\n  let {\n    cartId,\n    productId\n  } = _ref2;\n  return async dispatch => {\n    const response = await csrfFetch(`/api/cart/${cartId}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        productId,\n        cartId\n      })\n    });\n    if (response.ok) {\n      const product = await response.json();\n      dispatch(addToCart(product));\n      return product;\n    }\n    return response;\n  };\n};\nexport const editQuantityThunk = (cartItemId, newQuantity, productId, cartId) => async dispatch => {\n  const response = await csrfFetch(`/api/cart/${cartId}`, {\n    method: 'PUT',\n    body: JSON.stringify({\n      cartItemId,\n      newQuantity,\n      productId,\n      cartId\n    })\n  });\n  if (response.ok) {\n    const product = await response.json();\n    console.log(product);\n    dispatch(editQuantity(cartItemId, product.quantity));\n    return product;\n  }\n};\nexport const deleteCartThunk = (cartId, productId) => async dispatch => {\n  const response = await csrfFetch(`/api/cart/${cartId}/${productId}`, {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    const removeFromCart = await response.json();\n    dispatch(deleteFromCart(cartId, productId));\n    return removeFromCart;\n  }\n};\nconst initialState = {\n  cartItems: {\n    CartProduct: {}\n  }\n};\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOAD_CART:\n      console.log(\"action\", action.products);\n      const normalizedCartItems = action.products.Products.reduce((acc, item) => {\n        acc[item.CartProduct.id] = item;\n        return acc;\n      }, {});\n      return {\n        ...state,\n        cartItems: normalizedCartItems,\n        cartId: action.cartId\n      };\n    case ADD_CART:\n      return {\n        ...state,\n        cartItems: {\n          ...state.cartItems,\n          [action.product.productId]: action.product\n        }\n      };\n    case EDIT_QUANTITY:\n      const newState = {\n        ...state\n      };\n      newState.cartItems[action.cartItemId].CartProduct.quantity = action.newQuantity;\n      return newState;\n    case REMOVE_CART:\n      const updatedCartItems = {\n        ...state.cartItems\n      };\n      delete updatedCartItems[action.productId];\n      return {\n        ...state,\n        cartItems: updatedCartItems\n      };\n    // const { [action.productId]: _, ...updatedCartItems } = state.cartItems;\n    // return {\n    //   ...state,\n    //   cartItems: updatedCartItems,\n    // };\n\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["csrfFetch","LOAD_CART","ADD_CART","REMOVE_CART","EDIT_QUANTITY","loadToCart","products","type","addToCart","product","editQuantity","cartItemId","newQuantity","deleteFromCart","cartId","productId","loadAllCartThunk","_ref","dispatch","response","ok","cartItems","json","addToCartThunk","_ref2","method","body","JSON","stringify","editQuantityThunk","console","log","quantity","deleteCartThunk","removeFromCart","initialState","CartProduct","cartReducer","state","arguments","length","undefined","action","normalizedCartItems","Products","reduce","acc","item","id","newState","updatedCartItems"],"sources":["/Users/yiningmao/Desktop/SNOWSHOP Project/SNOWSHOP/frontend/src/store/cart.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\";\n\nconst LOAD_CART = '/cart/LOAD_CART';\nconst ADD_CART = '/cart/ADD_CART';\nconst REMOVE_CART = '/cart/REMOVE_CART';\nconst EDIT_QUANTITY = '/cart/EDIT_QUANTITY';\n\n// Action creators\nexport const loadToCart = (products) => {\n  return {\n    type: LOAD_CART,\n    products,\n\n  };\n};\n\nexport const addToCart = (product) => {\n  return {\n    type: ADD_CART,\n    product,\n  };\n};\n\nexport const editQuantity = (cartItemId, newQuantity) => {\n  return {\n    type: EDIT_QUANTITY,\n    cartItemId,\n    newQuantity,\n  };\n};\n\nexport const deleteFromCart = (cartId, productId) => {\n  return {\n    type: REMOVE_CART,\n    productId,\n    cartId\n  };\n};\n\n\nexport const loadAllCartThunk = ({cartId}) => async (dispatch) => {\n  const response = await csrfFetch(`/api/cart/${cartId}`);\n\n  if (response.ok) {\n    const cartItems = await response.json();\n    dispatch(loadToCart( cartItems));\n    return cartItems;\n  }\n  return response;\n};\n\nexport const addToCartThunk = ({cartId, productId}) => async (dispatch) => {\n\n const response = await csrfFetch(`/api/cart/${cartId}`, {\n  method: 'POST',\n  body: JSON.stringify({productId, cartId})\n });\n\n  if (response.ok) {\n    const product = await response.json();\n    dispatch(addToCart(product));\n    return product;\n  }\n\n  return response;\n};\n\nexport const editQuantityThunk = (cartItemId, newQuantity, productId, cartId) => async (dispatch) => {\n\n  const response = await csrfFetch(`/api/cart/${cartId}`, {\n    method: 'PUT',\n    body: JSON.stringify({cartItemId, newQuantity, productId, cartId})\n   });\n\nif (response.ok) {\n\n  const product = await response.json()\n  console.log(product)\n  dispatch(editQuantity(cartItemId, product.quantity ))\n  return product\n\n}\n}\n\nexport const deleteCartThunk = (cartId, productId) => async (dispatch) => {\n  const response = await csrfFetch(`/api/cart/${cartId}/${productId}`, {\n      method: 'DELETE'\n  })\n\n  if(response.ok) {\n    const removeFromCart = await response.json()\n    dispatch(deleteFromCart(cartId, productId))\n    return removeFromCart\n  }\n}\n\nconst initialState = {\n  cartItems: {CartProduct: {}},\n\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CART:\n    console.log(\"action\", action.products )\n      const normalizedCartItems = action.products.Products.reduce(\n        (acc, item) => {\n          acc[item.CartProduct.id] = item;\n          return acc;\n        },\n        {}\n      );\n      return {\n        ...state,\n        cartItems: normalizedCartItems,\n        cartId: action.cartId\n      };\n    case ADD_CART:\n      return {\n        ...state,\n        cartItems: {\n          ...state.cartItems,\n          [action.product.productId]: action.product,\n        },\n      };\n    case EDIT_QUANTITY:\n      const newState = {...state}\n      newState.cartItems[action.cartItemId].CartProduct.quantity = action.newQuantity\n      return newState\n    case REMOVE_CART:\n\n      const updatedCartItems = { ...state.cartItems };\n      delete updatedCartItems[action.productId];\n      return {\n        ...state,\n        cartItems: updatedCartItems,\n      }\n      // const { [action.productId]: _, ...updatedCartItems } = state.cartItems;\n      // return {\n      //   ...state,\n      //   cartItems: updatedCartItems,\n      // };\n      \n    default:\n      return state;\n  }\n};\n\n\nexport default cartReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}