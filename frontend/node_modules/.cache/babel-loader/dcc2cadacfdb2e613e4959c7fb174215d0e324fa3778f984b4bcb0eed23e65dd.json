{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\nconst LOAD_CART = '/cart/LOAD_CART';\nconst ADD_CART = '/cart/ADD_CART';\nconst REMOVE_CART = '/cart/REMOVE_CART';\nconst EDIT_QUANTITY = '/cart/EDIT_QUANTITY';\nconst CLEAR_CART = '/cart/CLEAR_CART';\n\n// Action creators\nexport const loadToCart = products => {\n  return {\n    type: LOAD_CART,\n    products\n  };\n};\nexport const addToCart = product => {\n  return {\n    type: ADD_CART,\n    product\n  };\n};\nexport const editQuantity = (cartItemId, newQuantity) => {\n  return {\n    type: EDIT_QUANTITY,\n    cartItemId,\n    newQuantity\n  };\n};\nexport const deleteFromCart = productId => {\n  return {\n    type: REMOVE_CART,\n    productId\n  };\n};\nexport const clearCart = () => {\n  return {\n    type: CLEAR_CART\n  };\n};\nexport const loadAllCartThunk = _ref => {\n  let {\n    cartId\n  } = _ref;\n  return async dispatch => {\n    const response = await csrfFetch(`/api/cart/${cartId}`);\n    if (response.ok) {\n      const cartItems = await response.json();\n      dispatch(loadToCart(cartItems));\n      return cartItems;\n    }\n    return response;\n  };\n};\nexport const addToCartThunk = _ref2 => {\n  let {\n    cartId,\n    productId\n  } = _ref2;\n  return async dispatch => {\n    const response = await csrfFetch(`/api/cart/${cartId}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        productId,\n        cartId\n      })\n    });\n    if (response.ok) {\n      const product = await response.json();\n      dispatch(addToCart(product));\n      return product;\n    }\n    return response;\n  };\n};\n\n// export const deleteCartThunk = (productId) => async (dispatch) => {\n//   const response = await csrfFetch(`/api/cart/${productId}`, {\n//       method: 'DELETE'\n//   })\n//   if(response.ok) {\n//       const removeFromCart = await response.json()\n//       dispatch(deleteFromCart(removeFromCart))\n//       return removeFromCart\n//   }\n\n//   return response;\n// }\n\nconst initialState = {\n  cartItems: []\n};\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOAD_CART:\n      return {\n        ...state,\n        cartItems: action.products\n      };\n    case ADD_CART:\n      return {\n        ...state,\n        cartItems: [...state.cartItems, action.product]\n      };\n    case EDIT_QUANTITY:\n      return {\n        ...state,\n        cartItems: state.cartItems.map(item => {\n          if (item.id === action.cartItemId) {\n            return {\n              ...item,\n              quantity: action.newQuantity\n            };\n          }\n          return item;\n        })\n      };\n    // case EDIT_QUANTITY:\n    //   return {\n    //     ...state,\n    //     cartItems: state.cartItems.map((item) =>\n    //       item.id === action.cartItemId ? { ...item, quantity: action.newQuantity } : item\n    //     ),\n    //   };\n\n    // case REMOVE_CART:\n    //   return {\n    //     ...state,\n    //     cartItems: state.cartItems.filter((item) => item.id !== action.productId),\n    //   };\n    // case CLEAR_CART:\n    //   return {\n    //     ...state,\n    //     cartItems: [],\n    //   };\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["csrfFetch","LOAD_CART","ADD_CART","REMOVE_CART","EDIT_QUANTITY","CLEAR_CART","loadToCart","products","type","addToCart","product","editQuantity","cartItemId","newQuantity","deleteFromCart","productId","clearCart","loadAllCartThunk","_ref","cartId","dispatch","response","ok","cartItems","json","addToCartThunk","_ref2","method","body","JSON","stringify","initialState","cartReducer","state","arguments","length","undefined","action","map","item","id","quantity"],"sources":["/Users/yiningmao/Desktop/SNOWSHOP Project/SNOWSHOP/frontend/src/store/cart.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\";\n\nconst LOAD_CART = '/cart/LOAD_CART';\nconst ADD_CART = '/cart/ADD_CART';\nconst REMOVE_CART = '/cart/REMOVE_CART';\nconst EDIT_QUANTITY = '/cart/EDIT_QUANTITY';\nconst CLEAR_CART = '/cart/CLEAR_CART';\n\n// Action creators\nexport const loadToCart = (products) => {\n  return {\n    type: LOAD_CART,\n    products,\n  };\n};\n\nexport const addToCart = (product) => {\n  return {\n    type: ADD_CART,\n    product,\n  };\n};\n\nexport const editQuantity = (cartItemId, newQuantity) => {\n  return {\n    type: EDIT_QUANTITY,\n    cartItemId,\n    newQuantity,\n  };\n};\n\nexport const deleteFromCart = (productId) => {\n  return {\n    type: REMOVE_CART,\n    productId,\n  };\n};\n\nexport const clearCart = () => {\n  return {\n    type: CLEAR_CART,\n  };\n};\n\nexport const loadAllCartThunk = ({cartId}) => async (dispatch) => {\n  const response = await csrfFetch(`/api/cart/${cartId}`);\n\n  if (response.ok) {\n    const cartItems = await response.json();\n    dispatch(loadToCart(cartItems));\n    return cartItems;\n  }\n  return response;\n};\n\nexport const addToCartThunk = ({cartId, productId}) => async (dispatch) => {\n\n const response = await csrfFetch(`/api/cart/${cartId}`, {\n  method: 'POST',\n  body: JSON.stringify({productId, cartId})\n });\n\n  if (response.ok) {\n    const product = await response.json();\n    dispatch(addToCart(product));\n    return product;\n  }\n\n  return response;\n};\n\n\n// export const deleteCartThunk = (productId) => async (dispatch) => {\n//   const response = await csrfFetch(`/api/cart/${productId}`, {\n//       method: 'DELETE'\n//   })\n//   if(response.ok) {\n//       const removeFromCart = await response.json()\n//       dispatch(deleteFromCart(removeFromCart))\n//       return removeFromCart\n//   }\n\n//   return response;\n// }\n\n\nconst initialState = {\n  cartItems: [],\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CART:\n      return {\n        ...state,\n        cartItems: action.products,\n      };\n    case ADD_CART:\n      return {\n        ...state,\n        cartItems: [...state.cartItems, action.product],\n      };\n      case EDIT_QUANTITY:\n        return {\n          ...state,\n          cartItems: state.cartItems.map((item) => {\n            if (item.id === action.cartItemId) {\n              return {\n                ...item,\n                quantity: action.newQuantity,\n              };\n            }\n            return item;\n          }),\n        };\n    // case EDIT_QUANTITY:\n    //   return {\n    //     ...state,\n    //     cartItems: state.cartItems.map((item) =>\n    //       item.id === action.cartItemId ? { ...item, quantity: action.newQuantity } : item\n    //     ),\n    //   };\n\n\n    // case REMOVE_CART:\n    //   return {\n    //     ...state,\n    //     cartItems: state.cartItems.filter((item) => item.id !== action.productId),\n    //   };\n    // case CLEAR_CART:\n    //   return {\n    //     ...state,\n    //     cartItems: [],\n    //   };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}