{"ast":null,"code":"var _s = $RefreshSig$();\nimport './CreateReviewForm.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { createReviewThunk } from '../../store/reviews';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateReviewForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const productIdobj = useParams();\n  const productId = productIdobj.productId;\n  const [errors, setErrors] = useState([]);\n  const [body, setBody] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const createBody = e => setBody(e.target.value);\n  const createRating = e => setRating(e.target.value);\n\n  // console.log(productId.productId)\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setErrors([]);\n    if (body.length === 0) {\n      setErrors(['Comment body text is required']);\n    }\n    const payload = {\n      songId,\n      body\n    };\n    if (errors.length === 0) {\n      dispatch(postComment(payload, sessionUser.user)).then(() => setBody('')).catch(async response => {\n        const data = await response.json();\n        if (data.errors) setErrors(data.errors);\n      });\n    }\n  };\n  return sessionUser.user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"review form\"\n  }, void 0, false) : null;\n};\n_s(CreateReviewForm, \"pOfCu5M1re1qdpIOv2hjekaSHb4=\", false, function () {\n  return [useDispatch, useSelector, useParams];\n});\n_c = CreateReviewForm;\nexport default CreateReviewForm;\nvar _c;\n$RefreshReg$(_c, \"CreateReviewForm\");","map":{"version":3,"names":["useSelector","useDispatch","useState","useHistory","useParams","createReviewThunk","Fragment","_Fragment","jsxDEV","_jsxDEV","CreateReviewForm","_s","dispatch","sessionUser","state","session","user","productIdobj","productId","errors","setErrors","body","setBody","rating","setRating","createBody","e","target","value","createRating","submitHandler","preventDefault","length","payload","songId","postComment","then","catch","response","data","json","id","children","_c","$RefreshReg$"],"sources":["/Users/yiningmao/Desktop/SNOWSHOP Project/SNOWSHOP/frontend/src/components/ReviewForm/CreateReviewForm.js"],"sourcesContent":["import './CreateReviewForm.css'\nimport { useSelector, useDispatch} from 'react-redux'\nimport { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { createReviewThunk } from '../../store/reviews';\n\nconst CreateReviewForm =() => {\n\n    const dispatch = useDispatch()\n    const sessionUser = useSelector(state => state.session.user);\n\n    const productIdobj = useParams()\n    const productId = productIdobj.productId\n\n    const [errors, setErrors] = useState([])\n    const [body, setBody] = useState(\"\");\n    const [rating, setRating] = useState(\"\");\n\n    const createBody = (e) => setBody(e.target.value)\n    const createRating = (e) => setRating(e.target.value)\n\n    // console.log(productId.productId)\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n       setErrors([])\n\n       if(body.length === 0) {\n        setErrors(['Comment body text is required'])\n      }\n        const payload = {\n            songId,\n            body\n        }\n\n        if (errors.length === 0) {\n            dispatch(postComment(payload, sessionUser.user))\n            .then(() => setBody(''))\n            .catch(async response => {\n                const data = await response.json()\n                if(data.errors) setErrors(data.errors)\n            })\n        }\n    }\n\n\n\n    return sessionUser.user.id ? (\n        <>\n        review form\n        </>\n    ) :\n    null;\n}\n\nexport default CreateReviewForm\n"],"mappings":";AAAA,OAAO,wBAAwB;AAC/B,SAASA,WAAW,EAAEC,WAAW,QAAO,aAAa;AACrD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,EAAEC,SAAS,QAAQ,kBAAkB;AACxD,SAASC,iBAAiB,QAAQ,qBAAqB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,gBAAgB,GAAEA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,WAAW,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,OAAO,CAACC,IAAI,CAAC;EAE5D,MAAMC,YAAY,GAAGb,SAAS,CAAC,CAAC;EAChC,MAAMc,SAAS,GAAGD,YAAY,CAACC,SAAS;EAExC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMuB,UAAU,GAAIC,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjD,MAAMC,YAAY,GAAIH,CAAC,IAAKF,SAAS,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;;EAErD;;EAEA,MAAME,aAAa,GAAIJ,CAAC,IAAK;IACzBA,CAAC,CAACK,cAAc,CAAC,CAAC;IAEnBX,SAAS,CAAC,EAAE,CAAC;IAEb,IAAGC,IAAI,CAACW,MAAM,KAAK,CAAC,EAAE;MACrBZ,SAAS,CAAC,CAAC,+BAA+B,CAAC,CAAC;IAC9C;IACE,MAAMa,OAAO,GAAG;MACZC,MAAM;MACNb;IACJ,CAAC;IAED,IAAIF,MAAM,CAACa,MAAM,KAAK,CAAC,EAAE;MACrBpB,QAAQ,CAACuB,WAAW,CAACF,OAAO,EAAEpB,WAAW,CAACG,IAAI,CAAC,CAAC,CAC/CoB,IAAI,CAAC,MAAMd,OAAO,CAAC,EAAE,CAAC,CAAC,CACvBe,KAAK,CAAC,MAAMC,QAAQ,IAAI;QACrB,MAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClC,IAAGD,IAAI,CAACpB,MAAM,EAAEC,SAAS,CAACmB,IAAI,CAACpB,MAAM,CAAC;MAC1C,CAAC,CAAC;IACN;EACJ,CAAC;EAID,OAAON,WAAW,CAACG,IAAI,CAACyB,EAAE,gBACtBhC,OAAA,CAAAF,SAAA;IAAAmC,QAAA,EAAE;EAEF,gBAAE,CAAC,GAEP,IAAI;AACR,CAAC;AAAA/B,EAAA,CAhDKD,gBAAgB;EAAA,QAEDT,WAAW,EACRD,WAAW,EAEVI,SAAS;AAAA;AAAAuC,EAAA,GAL5BjC,gBAAgB;AAkDtB,eAAeA,gBAAgB;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}